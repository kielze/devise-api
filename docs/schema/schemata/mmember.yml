---
"$schema": http://json-schema.org/draft-04/hyper-schema
title: User Parameter
description: mmemberのスキーマを定義
id: schemata/user
stability: prototype
strictProperties: true
type:
- object

definitions:
  id:
    description: unique identifier of user
    example: 1
    readOnly: true
    type:
    - integer
  authenticity_token:
    description: 認証トークン
    example: efDkcanZLLCduSjzF81mrjzsFOLRZoQcWnwyJV9Vuy8=
    readOnly: true
    type:
    - string
  user:
    description: ユーザー情報の配列
    example: '{"email"=>"email@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}'
    type:
    - array
    email:
      description: email address
      example: email@example.com
      format: email
      readOnly: true
      type:
      - string
    password:
      description: password
      example: nfho084j
      readOnly: true
      type:
      - string
    password_confirmation:
      description:   password confirmation
      example: nfho084j
      readOnly: true
      type:
      - string
    remember_me:
      description: ログイン記憶
      example: 0
      readOnly: true
      type:
      - string
  commit:
    description: commit
    example: メールアドレス変更
    readOnly: true
    type:
    - string
  service:
    description: どのツールか
    example: 1
    readOnly: true
    type:
    - "null"
    - integer

# DEVISEに従ったRouting
links:
- description: user_session
  href: "/users/sign_in"
  method: POST
  rel: create
  schema:
    properties:
      authenticity_token:
        "$ref": "/schemata/user#/definitions/authenticity_token"
      user:
        "$ref": "/schemata/user#/definitions/user"
        email:
          "$ref": "/schemata/user#/definitions/user/email"
        password:
          "$ref": "/schemata/user#/definitions/user/password"
        remember_me:
          "$ref": "/schemata/user#/definitions/user/remember_me"
    required: ["authenticity_token", "email", "password"]
    type:
    - object
  title: Create

- description: user_password
  href: "/users/password"
  method: POST
  rel: create
  schema:
    properties:
      authenticity_token:
        "$ref": "/schemata/user#/definitions/authenticity_token"
      user:
        "$ref": "/schemata/user#/definitions/user"
        email:
          "$ref": "/schemata/user#/definitions/user/email"
        password:
          "$ref": "/schemata/user#/definitions/user/password"
        password_confirmation:
          "$ref": "/schemata/user#/definitions/user/password_confirmation"
    required: ["authenticity_token", "email", "password", "password_confirmation"]
    type:
    - object
  title: Create

- description: edit_user_password update
  href: "/users/password"
  method: PATCH
  rel: update
  schema:
    properties:
      authenticity_token:
        "$ref": "/schemata/user#/definitions/authenticity_token"
      user:
        "$ref": "/schemata/user#/definitions/user"
        email:
          "$ref": "/schemata/user#/definitions/user/email"
        password:
          "$ref": "/schemata/user#/definitions/user/password"
        password_confirmation:
          "$ref": "/schemata/user#/definitions/user/password_confirmation"
    required: ["authenticity_token", "email", "password", "password_confirmation"]
    type:
    - object
  title: Update

- description: edit_user_password update
  href: "/users/password"
  method: PUT
  rel: update
  schema:
    properties:
      authenticity_token:
        "$ref": "/schemata/user#/definitions/authenticity_token"
      user:
        "$ref": "/schemata/user#/definitions/user"
        email:
          "$ref": "/schemata/user#/definitions/user/email"
        password:
          "$ref": "/schemata/user#/definitions/user/password"
        password_confirmation:
          "$ref": "/schemata/user#/definitions/user/password_confirmation"
    required: ["authenticity_token", "email", "password", "password_confirmation"]
    type:
    - object
  title: Update

- description: user_registration create
  href: "/users"
  method: POST
  rel: create
  schema:
    properties:
      authenticity_token:
        "$ref": "/schemata/user#/definitions/authenticity_token"
      user:
        "$ref": "/schemata/user#/definitions/user"
        email:
          "$ref": "/schemata/user#/definitions/user/email"
        password:
          "$ref": "/schemata/user#/definitions/user/password"
      service:
        "$ref": "/schemata/user#/definitions/service"
    required: ["authenticity_token", "email", "password", "service"]
    type:
    - object
  title: Create

- description: edit_user_registration update
  href: "/users"
  method: PATCH
  rel: update
  schema:
    properties:
      authenticity_token:
        "$ref": "/schemata/user#/definitions/authenticity_token"
      user:
        "$ref": "/schemata/user#/definitions/user"
        email:
          "$ref": "/schemata/user#/definitions/user/email"
      commit:
        "$ref": "/schemata/user#/definitions/commit"
    required: ["authenticity_token", "email"]
    type:
    - object
  title: Update

- description: edit_user_registration update
  href: "/users"
  method: PUT
  rel: update
  schema:
    properties:
      authenticity_token:
        "$ref": "/schemata/user#/definitions/authenticity_token"
      user:
        "$ref": "/schemata/user#/definitions/user"
        email:
          "$ref": "/schemata/user#/definitions/user/email"
      commit:
        "$ref": "/schemata/user#/definitions/commit"
    required: ["authenticity_token", "email"]
    type:
    - object
  title: Update

properties:
  id:
    "$ref": "/schemata/user#/definitions/id"
  authenticity_token:
    "$ref": "/schemata/user#/definitions/authenticity_token"
  user:
    "$ref": "/schemata/user#/definitions/user"
    email:
      "$ref": "/schemata/user#/definitions/user/email"
    password:
      "$ref": "/schemata/user#/definitions/user/password"
    password_confirmation:
      "$ref": "/schemata/user#/definitions/user/password_confirmation"
    remember_me:
      "$ref": "/schemata/user#/definitions/user/remember_me"
  commit:
    "$ref": "/schemata/user#/definitions/commit"
  service:
    "$ref": "/schemata/user#/definitions/service"
